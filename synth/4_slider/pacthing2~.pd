#N canvas 918 350 730 726 12;
#X floatatom 500 80 5 0 0 0 - - -, f 5;
#X floatatom 50 80 5 0 0 0 - - -, f 5;
#X obj 50 -80 inlet;
#X obj 200 -80 inlet;
#X obj 350 -80 inlet;
#X obj 500 -80 inlet;
#X floatatom 50 -20 5 0 0 0 - - -, f 5;
#X floatatom 200 -20 5 0 0 0 - - -, f 5;
#X floatatom 350 -20 5 0 0 0 - - -, f 5;
#X floatatom 500 -20 5 0 0 0 - - -, f 5;
#X obj 200 680 outlet~;
#X floatatom 350 80 5 0 0 0 - - -, f 5;
#X floatatom 200 80 5 0 0 0 - - -, f 5;
#X obj 1443 235 cnv 3 550 3 empty \$0-pddp.cnv.inlets inlets 8 12 0
13 #dcdcdc #000000 0;
#X obj 1443 323 cnv 3 550 3 empty \$0-pddp.cnv.outlets outlets 8 12
0 13 #dcdcdc #000000 0;
#X obj 1443 360 cnv 3 550 3 empty \$0-pddp.cnv.argument arguments 8
12 0 13 #dcdcdc #000000 0;
#X obj 1443 410 cnv 3 550 3 empty \$0-pddp.cnv.more_info more_info
8 12 0 13 #dcdcdc #000000 0;
#N canvas 311 415 428 109 Related_objects 0;
#X obj 0 0 cnv 15 425 20 empty \$0-pddp.cnv.subheading empty 3 12 0
14 #c4dcdc #000000 0;
#X text 6 1 Related Objects;
#X restore 1642 544 pd Related_objects;
#X obj 1523 245 cnv 17 3 34 empty \$0-pddp.cnv.let.0 0 5 9 0 16 #dcdcdc
#9c9c9c 0;
#X obj 1523 333 cnv 17 3 17 empty \$0-pddp.cnv.let.0 0 5 9 0 16 #dcdcdc
#9c9c9c 0;
#X text 1552 243 signal;
#X obj 1523 294 cnv 17 3 17 empty \$0-pddp.cnv.let.0 1 5 9 0 16 #dcdcdc
#9c9c9c 0;
#X text 1552 293 signal;
#X text 1623 293 - control signal;
#X text 1623 244 - input signal to sample;
#X text 1552 333 signal;
#X text 1623 333 - output samples of input signal when control triggers
;
#X text 1534 371 1) float;
#X text 1623 370 - sets trigger value for control input (default 0)
\, needs to be above 0 to work with phasor~;
#X text 1550 420 The sah~ object accepts two signals. The left signal
is the "input" and the right signal is the "control." When the control
makes a transition from being at or below the trigger value to being
above the trigger value \, the input is sampled and its current value
is output until another control transition occurs and the input is
sampled again. The default threshold value is 0 \, but can be specified
via a float in the left inlet or as an argument to sah~.;
#X obj 200 600 cycle~;
#X obj 200 540 *~ 1000;
#X obj 50 300 phasor~ 20;
#X obj 200 300 phasor~ 11.33;
#X text 530 130 Optional argument sets trigger value for control input
(default 0) \; you need a trigger above 0 to work with phasor~;
#X text 700 50 You've heard it before: the classic arpeggiator \, made
with two phasor~ objects;
#X text 280 560 sah~ output used as the frequency of an oscillator
;
#X obj 200 480 sah~ 0.01;
#X text 1552 263 float;
#X text 1623 264 - set trigger;
#X floatatom 500 300 0 0 0 0 - - -;
#X text 570 80 set trigger;
#X floatatom 350 480 5 0 0 0 - - -, f 5;
#X obj 130 80 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000;
#X obj 130 130 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X obj 270 80 - 0.05;
#X obj 50 20 sq/logic/map 0 127 0 15;
#X obj 200 50 sq/logic/map 0 127 1 150;
#X obj 350 20 sq/logic/map 0 127 150 2000;
#X obj 500 50 sq/logic/map 0 127 0 1;
#X connect 0 0 40 0;
#X connect 1 0 32 0;
#X connect 1 0 43 0;
#X connect 2 0 6 0;
#X connect 3 0 7 0;
#X connect 4 0 8 0;
#X connect 5 0 9 0;
#X connect 6 0 46 0;
#X connect 7 0 47 0;
#X connect 8 0 48 0;
#X connect 9 0 49 0;
#X connect 11 0 42 0;
#X connect 12 0 33 0;
#X connect 12 0 44 0;
#X connect 12 0 45 0;
#X connect 30 0 10 0;
#X connect 31 0 30 0;
#X connect 32 0 37 0;
#X connect 33 0 37 1;
#X connect 37 0 31 0;
#X connect 40 0 37 0;
#X connect 42 0 31 1;
#X connect 43 0 12 0;
#X connect 44 0 46 0;
#X connect 45 0 46 4;
#X connect 46 0 1 0;
#X connect 47 0 12 0;
#X connect 48 0 11 0;
#X connect 49 0 0 0;
